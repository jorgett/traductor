# Herramienta de diagn√≥stico para Docker
Write-Host "üîç Iniciando diagn√≥stico de Docker..." -ForegroundColor Cyan
Write-Host ""

# 1. Comprobar si Docker est√° instalado
Write-Host "1Ô∏è‚É£ Comprobando instalaci√≥n de Docker..." -ForegroundColor Yellow
try {
    $dockerVersion = docker --version
    Write-Host "‚úÖ Docker instalado: $dockerVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker no est√° instalado o no est√° en el PATH" -ForegroundColor Red
    Write-Host "   Instala Docker Desktop desde: https://www.docker.com/products/docker-desktop" -ForegroundColor Red
    exit 1
}

# 2. Comprobar si Docker est√° en ejecuci√≥n
Write-Host ""
Write-Host "2Ô∏è‚É£ Comprobando si Docker est√° en ejecuci√≥n..." -ForegroundColor Yellow
try {
    docker info >$null 2>&1
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Docker est√° ejecut√°ndose correctamente" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Docker est√° instalado pero no se est√° ejecutando" -ForegroundColor Red
        Write-Host "   Inicia Docker Desktop y espera a que se inicialice completamente" -ForegroundColor Red
        exit 1
    }
} catch {
    Write-Host "‚ùå Error al comprobar el estado de Docker" -ForegroundColor Red
    Write-Host "   Mensaje de error: $_" -ForegroundColor Red
    exit 1
}

# 3. Comprobar conectividad del daemon Docker
Write-Host ""
Write-Host "3Ô∏è‚É£ Comprobando conectividad del daemon Docker..." -ForegroundColor Yellow
try {
    docker ps >$null 2>&1
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ El daemon de Docker responde correctamente" -ForegroundColor Green
    } else {
        Write-Host "‚ùå El daemon de Docker no responde correctamente" -ForegroundColor Red
        Write-Host "   Reinicia Docker Desktop" -ForegroundColor Red
        exit 1
    }
} catch {
    Write-Host "‚ùå Error al conectar con el daemon de Docker" -ForegroundColor Red
    Write-Host "   Mensaje de error: $_" -ForegroundColor Red
    exit 1
}

# 4. Comprobar si docker-compose est√° disponible
Write-Host ""
Write-Host "4Ô∏è‚É£ Comprobando disponibilidad de docker-compose..." -ForegroundColor Yellow
try {
    $dockerComposeVersion = docker-compose --version
    Write-Host "‚úÖ docker-compose disponible: $dockerComposeVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå docker-compose no est√° disponible" -ForegroundColor Red
    Write-Host "   Aseg√∫rate de que Docker Desktop est√° actualizado" -ForegroundColor Red
    exit 1
}

# 5. Comprobar espacio disponible
Write-Host ""
Write-Host "5Ô∏è‚É£ Comprobando espacio disponible..." -ForegroundColor Yellow
$drive = Get-PSDrive C
$freeSpaceGB = [math]::Round($drive.Free / 1GB, 2)
if ($freeSpaceGB -lt 5) {
    Write-Host "‚ö†Ô∏è Poco espacio disponible en disco: $freeSpaceGB GB" -ForegroundColor Yellow
    Write-Host "   Se recomiendan al menos 5 GB libres para Docker" -ForegroundColor Yellow
} else {
    Write-Host "‚úÖ Espacio disponible suficiente: $freeSpaceGB GB" -ForegroundColor Green
}

# Resultado final
Write-Host ""
Write-Host "‚úÖ Diagn√≥stico completado: Docker est√° listo para usar" -ForegroundColor Green
Write-Host "   Ahora puedes ejecutar ./start-development.ps1 para iniciar la aplicaci√≥n" -ForegroundColor Cyan
